/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.symboleo.symboleo.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.symboleo.symboleo.Point;
import org.xtext.example.symboleo.symboleo.PointConst;
import org.xtext.example.symboleo.symboleo.SitName;
import org.xtext.example.symboleo.symboleo.SymboleoPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Point</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.symboleo.symboleo.impl.PointImpl#getEventName <em>Event Name</em>}</li>
 *   <li>{@link org.xtext.example.symboleo.symboleo.impl.PointImpl#getUnnamed <em>Unnamed</em>}</li>
 *   <li>{@link org.xtext.example.symboleo.symboleo.impl.PointImpl#getPointConst <em>Point Const</em>}</li>
 *   <li>{@link org.xtext.example.symboleo.symboleo.impl.PointImpl#getUnit <em>Unit</em>}</li>
 *   <li>{@link org.xtext.example.symboleo.symboleo.impl.PointImpl#getTempOp <em>Temp Op</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PointImpl extends MinimalEObjectImpl.Container implements Point
{
  /**
   * The cached value of the '{@link #getEventName() <em>Event Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEventName()
   * @generated
   * @ordered
   */
  protected SitName eventName;

  /**
   * The default value of the '{@link #getUnnamed() <em>Unnamed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnnamed()
   * @generated
   * @ordered
   */
  protected static final String UNNAMED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUnnamed() <em>Unnamed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnnamed()
   * @generated
   * @ordered
   */
  protected String unnamed = UNNAMED_EDEFAULT;

  /**
   * The cached value of the '{@link #getPointConst() <em>Point Const</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPointConst()
   * @generated
   * @ordered
   */
  protected PointConst pointConst;

  /**
   * The default value of the '{@link #getUnit() <em>Unit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected static final String UNIT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUnit() <em>Unit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected String unit = UNIT_EDEFAULT;

  /**
   * The default value of the '{@link #getTempOp() <em>Temp Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTempOp()
   * @generated
   * @ordered
   */
  protected static final String TEMP_OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTempOp() <em>Temp Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTempOp()
   * @generated
   * @ordered
   */
  protected String tempOp = TEMP_OP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PointImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SymboleoPackage.Literals.POINT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SitName getEventName()
  {
    return eventName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEventName(SitName newEventName, NotificationChain msgs)
  {
    SitName oldEventName = eventName;
    eventName = newEventName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT__EVENT_NAME, oldEventName, newEventName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEventName(SitName newEventName)
  {
    if (newEventName != eventName)
    {
      NotificationChain msgs = null;
      if (eventName != null)
        msgs = ((InternalEObject)eventName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymboleoPackage.POINT__EVENT_NAME, null, msgs);
      if (newEventName != null)
        msgs = ((InternalEObject)newEventName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymboleoPackage.POINT__EVENT_NAME, null, msgs);
      msgs = basicSetEventName(newEventName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT__EVENT_NAME, newEventName, newEventName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUnnamed()
  {
    return unnamed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnnamed(String newUnnamed)
  {
    String oldUnnamed = unnamed;
    unnamed = newUnnamed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT__UNNAMED, oldUnnamed, unnamed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PointConst getPointConst()
  {
    return pointConst;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPointConst(PointConst newPointConst, NotificationChain msgs)
  {
    PointConst oldPointConst = pointConst;
    pointConst = newPointConst;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT__POINT_CONST, oldPointConst, newPointConst);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPointConst(PointConst newPointConst)
  {
    if (newPointConst != pointConst)
    {
      NotificationChain msgs = null;
      if (pointConst != null)
        msgs = ((InternalEObject)pointConst).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymboleoPackage.POINT__POINT_CONST, null, msgs);
      if (newPointConst != null)
        msgs = ((InternalEObject)newPointConst).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymboleoPackage.POINT__POINT_CONST, null, msgs);
      msgs = basicSetPointConst(newPointConst, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT__POINT_CONST, newPointConst, newPointConst));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUnit()
  {
    return unit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnit(String newUnit)
  {
    String oldUnit = unit;
    unit = newUnit;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT__UNIT, oldUnit, unit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTempOp()
  {
    return tempOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTempOp(String newTempOp)
  {
    String oldTempOp = tempOp;
    tempOp = newTempOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT__TEMP_OP, oldTempOp, tempOp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT__EVENT_NAME:
        return basicSetEventName(null, msgs);
      case SymboleoPackage.POINT__POINT_CONST:
        return basicSetPointConst(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT__EVENT_NAME:
        return getEventName();
      case SymboleoPackage.POINT__UNNAMED:
        return getUnnamed();
      case SymboleoPackage.POINT__POINT_CONST:
        return getPointConst();
      case SymboleoPackage.POINT__UNIT:
        return getUnit();
      case SymboleoPackage.POINT__TEMP_OP:
        return getTempOp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT__EVENT_NAME:
        setEventName((SitName)newValue);
        return;
      case SymboleoPackage.POINT__UNNAMED:
        setUnnamed((String)newValue);
        return;
      case SymboleoPackage.POINT__POINT_CONST:
        setPointConst((PointConst)newValue);
        return;
      case SymboleoPackage.POINT__UNIT:
        setUnit((String)newValue);
        return;
      case SymboleoPackage.POINT__TEMP_OP:
        setTempOp((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT__EVENT_NAME:
        setEventName((SitName)null);
        return;
      case SymboleoPackage.POINT__UNNAMED:
        setUnnamed(UNNAMED_EDEFAULT);
        return;
      case SymboleoPackage.POINT__POINT_CONST:
        setPointConst((PointConst)null);
        return;
      case SymboleoPackage.POINT__UNIT:
        setUnit(UNIT_EDEFAULT);
        return;
      case SymboleoPackage.POINT__TEMP_OP:
        setTempOp(TEMP_OP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT__EVENT_NAME:
        return eventName != null;
      case SymboleoPackage.POINT__UNNAMED:
        return UNNAMED_EDEFAULT == null ? unnamed != null : !UNNAMED_EDEFAULT.equals(unnamed);
      case SymboleoPackage.POINT__POINT_CONST:
        return pointConst != null;
      case SymboleoPackage.POINT__UNIT:
        return UNIT_EDEFAULT == null ? unit != null : !UNIT_EDEFAULT.equals(unit);
      case SymboleoPackage.POINT__TEMP_OP:
        return TEMP_OP_EDEFAULT == null ? tempOp != null : !TEMP_OP_EDEFAULT.equals(tempOp);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (unnamed: ");
    result.append(unnamed);
    result.append(", unit: ");
    result.append(unit);
    result.append(", tempOp: ");
    result.append(tempOp);
    result.append(')');
    return result.toString();
  }

} //PointImpl
